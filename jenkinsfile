pipeline{
    agent any

    stages{
        stage('Git Clone and build war file'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'be893817-ca5c-4d3a-9ed0-c0f6ee27ea20', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                sh '''  
                    ls                     
                    rm -rf *
                    git clone https://${USER}:${PASS}@github.com/Saqeeb1234/calulator-webapp.git 
                    cd calulator-webapp
                    echo "Creating war file........"
                    mvn clean package                    
                    echo "war file created....."
                    '''
                }
            }
        }
        stage('testing code'){          
                stages {                     
                    stage('SAST scan'){
                        steps{
                            withCredentials([string(credentialsId: 'SNYK_TOKEN', variable: 'SNYK_TOKEN')]){  
                                sh '''
                                cd calulator-webapp
                                docker run --rm --env SNYK_TOKEN=${SNYK_TOKEN} -v $(pwd):/app snyk/snyk:maven 'snyk code test --project-name="sast-code-test"'
                                '''
                            }
                        }
                    }
                    stage('SCA scan'){
                        steps{
                            withCredentials([string(credentialsId: 'SNYK_TOKEN', variable: 'SNYK_TOKEN')]){
                                sh '''
                                cd calulator-webapp
                                docker run --rm --env SNYK_TOKEN=${SNYK_TOKEN} -v $(pwd):/app snyk/snyk:maven 'snyk  test --project-name="sca-code-test"'
                                '''
                            }
                        }
                    }                    
                }            
            }
        stage('test Dockerfile and build Docker Image'){
            steps{
                sh '''
                cd calulator-webapp
                echo "testing docket image........"
                docker run --rm -i hadolint/hadolint < Dockerfile
                echo "Build Docker image........"
                docker build -t calculator-webapp:${BUILD_NUMBER} .
                echo "Docker image built......"
                '''
            }
        }
        stage('DAST scan'){
            steps{
                withCredentials([string(credentialsId: 'SNYK_TOKEN', variable: 'SNYK_TOKEN')]){
                    sh '''
                    cd calulator-webapp
                    docker run -d --name calc-container -p 8081:8080 calculator-webapp:${BUILD_NUMBER}
                    sleep 10
                    mkdir report && chmod 777 -R report && cd report 
                    docker run -v ${PWD}:/zap/wrk/:rw --network="host" zaproxy/zap-stable zap-baseline.py -t http://localhost:8081
                    docker stop calc-container
                    docker rm calc-container
                    '''
                }
            }
        }
    }
}